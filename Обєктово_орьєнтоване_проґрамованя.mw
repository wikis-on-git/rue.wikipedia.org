'''Обєктово орьєнтоване проґрамованя''' (скорочоване на ''OOP'', з анґліцького '''Object-oriented programming''') є [[методіка]] вывоя [[Софтвер|софтверу]], основана на наступных ідеях, концепціях:

== Концепція ==
* ''Обєкты'' – єднотвливы елементы моделованой реаліты (як дата, так повязану функчность) суть в проґрамі зґрупованы до [[Ентіта (математіка)|ентіт]], званых обєкты. обєкты собі памятають свій статус і навонка додавають ''операції'' (доступны як методы про кликаня).

* ''Абстракція'' – [[проґраматор]], ці тыж [[Компютеровый проґрам|проґрам]], котрый створює, може абстраговати од дакотрых детайлів роботы єднотливый обєктів. Каждый обєкт працує як [[Чорна скринька (кібернетіка)|чорна скринька]], котра годна выконовати становлены дїї і комуніковати з околіцёв, без того жебы пожадовала знаня способу, котрым днука працує.

* ''Капсулація'' – ґарантує, же обєкт не може прямо приступовати до „внутрїшностей“ іншых обєктів, што бы могло вести к неконзістенції. Каждый обєкт з вонкашнёго погляду сприступнює ''інтерфейс'', за помочі котрого (і нияк іншак) ся з обєктом працує.

* ''Складаня'' – Обєкт може обсяговати іншы обєкты.

* ''Делеґованя'' – Обєкт може хосновати службы іншых обєктів так, же їх пожадать о проведжіна операції.

* ''Дїдиня'' – обєкты суть орґанізованы стромовым способом, коли обєкты даякой сорты можуть ''дїдити'' з іншой сорты обєктів, чім переберають їх споснобности, ку котрым лем додавають свої властны росшырїня. Тота ідея ся звычайно імплементує за помочі роздїлїня обєктів до ''клас'', причім каждый обєкт є інштанціов становленок класы. Кажда класа пак може дїдити ід іншой класы (в дакотрых языках проґрамованя і з пару іншых клас).

* ''[[Поліморфізм]]'' – одказованый обєкт ся веде на основі того, якой класы є інштанціов. Кідь пару обєктів додавать такый самый інтерфейс, працує ся з нима тым самым способом, але їх конкретне хованя ся одрізнять залежно од їх імплементації. В поліморфізму условного дїдинём тото значіть, же на місце, де є чекана інштанція даякой класы, можеме досадити і інштанцію хоцякой єй підкласы, бо інтерфейс підкласы є підмножинов інтерфейсу класы. В поліморфізму безусловного дїдинём старчіть, кідь ся інтерфейсы (або їх пожадованы части) в різных класах згодують, пак суть взаємно поліморфны.
{{Стыржень}}
